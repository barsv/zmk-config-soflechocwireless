/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/* END temporary RGB support section */
// Encoder resolutions

&left_encoder { steps = <20>; };

&right_encoder { steps = <20>; };

/ {
    combos {
        compatible = "zmk,combos";

        sticky3 {
            bindings = <&tog 3>;
            key-positions = <53 56>;
        };

        resetmain {
            bindings = <&sys_reset>;
            key-positions = <0 5>;
        };

        resetperipheral {
            bindings = <&sys_reset>;
            key-positions = <6 11>;
        };
    };

    macros {
        workemail1: workemail1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp R &kp I &kp A &kp M &kp AT &kp C &kp A &kp I &kp T &kp L &kp I &kp N &kp E &kp L &kp E &kp E &kp DOT &kp C &kp O &kp M>;
        };

        workemail2: workemail2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp R &kp I &kp A &kp M &kp AT &kp C &kp L &kp C &kp T &kp O &kp O &kp L &kp B &kp O &kp X &kp DOT &kp O &kp R &kp G>;
        };

        EveryAction: EveryAction {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(E) &kp V &kp E &kp R &kp Y &kp LS(A) &kp C &kp T &kp I &kp O &kp N>;
        };

        Toolbox: Toolbox {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp LS(L) &kp LS(C) &kp SPACE &kp LS(T) &kp O &kp O &kp L &kp B &kp O &kp X>;
        };

        Asana: Asana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp S &kp A &kp N &kp A>;
        };

        Miroboard: Miroboard {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(M) &kp I &kp R &kp O &kp SPACE &kp B &kp O &kp A &kp R &kp D>;
        };

        EAACs: EAACs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp C &kp T &kp I &kp V &kp I &kp S &kp T &kp SPACE &kp LS(C) &kp O &kp D &kp E &kp S>;
        };

        EAAC: EAAC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp C &kp T &kp I &kp V &kp I &kp S &kp T &kp SPACE &kp LS(C) &kp O &kp D &kp E>;
        };

        EASQs: EASQs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp U &kp R &kp V &kp E &kp Y &kp SPACE &kp LS(Q) &kp U &kp E &kp S &kp T &kp I &kp O &kp N &kp S>;
        };

        EASQ: EASQ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp U &kp R &kp V &kp E &kp Y &kp SPACE &kp LS(Q) &kp U &kp E &kp S &kp T &kp I &kp O &kp N>;
        };

        EASCs: EASCs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp O &kp U &kp R &kp C &kp E &kp SPACE &kp LS(C) &kp O &kp D &kp E &kp S>;
        };

        EASC: EASC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp O &kp U &kp R &kp C &kp E &kp SPACE &kp LS(C) &kp O &kp D &kp E>;
        };

        EACampaign: EACampaign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp A &kp M &kp P &kp A &kp I &kp G &kp N>;
        };

        Type: EACT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp Y &kp P &kp E>;
        };

        lcthe: lcthe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E>;
            label = "lcTHE";
        };

        ucThe: ucThe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp E>;
            label = "ucThe";
        };

        EATE: EATE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp R &kp G &kp E &kp T &kp E &kp D &kp SPACE &kp LS(E) &kp M &kp A &kp I &kp L>;
        };

        EAOA: EAOA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(O) &kp N &kp L &kp I &kp N &kp E &kp SPACE &kp LS(A) &kp C &kp T &kp I &kp O &kp N &kp S>;
        };

        advoform: advoform {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(A) &kp D &kp V &kp O &kp C &kp A &kp C &kp Y>;
        };

        Volunteer: VolunteerForm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(V) &kp O &kp L &kp U &kp N &kp T &kp E &kp E &kp R>;
        };

        SignUp: SignUp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp I &kp G &kp N &kp SPACE &kp LS(U) &kp P>;
        };

        Event: Event {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(E) &kp V &kp E &kp N &kp T>;
        };

        Form: Form {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(F) &kp O &kp R &kp M>;
        };

        CreateList: CreateList {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp R &kp E &kp A &kp T &kp E &kp SPACE &kp A &kp SPACE &kp LS(L) &kp I &kp S &kp T>;
        };

        EASS: EASS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp A &kp V &kp E &kp D &kp SPACE &kp LS(S) &kp E &kp A &kp R &kp C &kp H>;
        };

        EASL: EASL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp A &kp V &kp E &kp D &kp SPACE &kp LS(L) &kp I &kp S &kp T>;
        };

        Report: Report {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(R) &kp E &kp P &kp O &kp R &kp T>;
        };
    };

    behaviors {
        layercycle: layercycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&to 1>, <&to 2>, <&to 3>, <&to 0>;

            label = "LAYERCYCLE";
            tapping-term-ms = <500>;
        };

        EmailCycle: EmailCycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&workemail1>, <&workemail2>;
        };

        layercycleback: layercycleback {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 3>, <&to 2>, <&to 1>;

            label = "LAYERCYCLEBACK";
            tapping-term-ms = <500>;
        };

        ACcycle: ACcycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&EAAC>, <&EAACs>;
        };

        SCcycle: SCcycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&EASC>, <&EASCs>;
        };

        SQcycle: SQcycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&EASQ>, <&EASQs>;
        };

        EAformscycle: EAformscycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings =
                <&advoform>,
                <&Volunteer>,
                <&SignUp>,
                <&Event>,
                <&EAOA>,
                <&Form>;
        };

        searchorreportcycle: searchorreportcycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&CreateList>, <&EASS>, <&EASL>, <&Report>;
        };

        theTheCycle: theTheCycle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&lcthe>, <&ucThe>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC           &kp N1  &kp N2        &kp N3            &kp N4        &kp N5                              &kp N6  &kp N7             &kp N8         &kp N9     &kp N0    &kp BACKSPACE
&kp TAB           &kp Q   &kp W         &kp E             &kp R         &kp T                               &kp Y   &kp U              &kp I          &kp O      &kp P     &kp RET
&kp LSHIFT        &kp A   &kp S         &kp D             &kp F         &kp G                               &kp H   &kp J              &kp K          &kp L      &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X         &kp C             &kp V         &kp B   &bootloader    &bootloader  &kp N   &kp M              &kp COMMA      &kp DOT    &kp FSLH  &kp RIGHT_SHIFT
                          &kp LEFT_ALT  &kp LEFT_COMMAND  &kp CAPSLOCK  &mo 1   &kp SPACE      &kp SPACE    &mo 2   &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp MINUS
            >;

            sensor-bindings =
                <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        layer1 {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&none       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                                            &kp F1           &kp F2    &kp F3          &kp F4         &kp F5            &kp F6
&kp GRAVE   &kp N6        &kp N7        &kp NUMBER_8  &kp N9                &kp N0                                            &kp F7           &kp F8    &kp F9          &kp F10        &kp F11           &kp F12
&none       &kp EXCL      &kp AT        &kp HASH      &kp DLLR              &kp PRCNT                                         &kp MINUS        &kp PLUS  &kp EQUAL       &kp LESS_THAN  &kp GREATER_THAN  &kp UNDERSCORE
&sys_reset  &kp CARET     &kp AMPS      &kp ASTRK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &mkp LCLK       &mkp RCLK  &kp LBKT         &kp RBKT  &kp LEFT_BRACE  &kp RBRC       &kp BSLH          &sys_reset
                          &none         &none         &none                 &layercycle            &out OUT_TOG    &none      &layercycleback  &none     &none           &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp END HOME>, <&inc_dec_kp PG_UP PG_DN>;
        };

        layer2 {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                 |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                 | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                 | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |   | RGB  |      |      |       |      |       |       |
            //              |      |       |       |      |      |   |      |      |      |       |      |

            bindings = <
&kp GRAVE  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(UP_ARROW)  &kp LG(SPACE)   &none                                             &none            &none          &none          &bt BT_CLR        &bt BT_PRV    &bt BT_NXT
&none      &none                 &none                 &none             &kp LG(LS(N5))  &kp LG(X)                                         &kp RG(A)        &kp AMPERSAND  &kp ASTERISK   &none             &none         &kp BACKSPACE
&none      &kp LG(A)             &kp LG(LS(N4))        &none             &none           &kp LG(C)                                         &kp RG(Z)        &none          &kp RG(K)      &none             &kp COLON     &kp DOUBLE_QUOTES
&soft_off  &kp K_UNDO            &kp LG(X)             &kp K_COPY        &kp K_PASTE     &kp LG(V)    &rgb_ug RGB_EFF    &rgb_ug RGB_TOG   &kp RG(RS(Z))    &none          &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION  &none
                                 &none                 &none             &kp LG(LS(V))   &layercycle  &kp GLOBE          &ext_power EP_ON  &layercycleback  &none          &none          &none
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            bindings = <
&ACcycle       &EACampaign           &EAOA        &none  &none  &rgb_ug RGB_SAI                                      &rgb_ug RGB_SAD  &none         &none     &none   &none       &none
&SCcycle       &Type                 &none        &none  &none  &rgb_ug RGB_HUI                                      &rgb_ug RGB_HUD  &EveryAction  &Toolbox  &Asana  &Miroboard  &kp LC(BACKSPACE)
&SQcycle       &EATE                 &EmailCycle  &none  &none  &rgb_ug RGB_SPI                                      &rgb_ug RGB_SPD  &theTheCycle  &none     &none   &none       &none
&EAformscycle  &searchorreportcycle  &none        &none  &none  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF    &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &none         &none     &none   &none       &none
                                     &none        &none  &none  &layercycle      &kp SPACE          &kp SPACE        &layercycleback  &none         &none     &none
            >;

            sensor-bindings =
                <&inc_dec_kp BACKSPACE DELETE>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
